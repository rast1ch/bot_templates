target-version = "py310"
line-length = 79
indent-width = 4
output-format = "github"


[lint]
ignore-init-module-imports = true
extend-safe-fixes = [
    # Missing return type annotation for public function 
    "ANN201",
    # Missing return type annotation for private function 
    "ANN202",
    # Missing return type annotation for special method `__init__`
    "ANN204",
    # Missing return type annotation for staticmethod
    "ANN205",
    # Missing return type annotation for classmethod
    "ANN206",
    # Use a single if statement instead of nested if statements
    "SIM102",
    # Use `list/tuple/dict` instead of `List/Tuple/Dict` for type annotation
    "UP006",
    # Use `X | Y` for type annotations
    # "UP007",
    # Use `X | Y` in `isinstance` call instead of `(X, Y)` 
    "UP038",
    # Trailing comma missing
    "COM812",
    # Missing explicit `return` at the end of function able to return non-`None` value
    "RET503",
    # Mutable class attributes should be annotated with `typing.ClassVar`
    "RUF012",
]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-builtins
    "A",
    # flake8-annotations
    "ANN",
    # flake8-unused-arguments
    "ARG",
    # flake8-async
    "ASYNC",
    # flake8-bugbear
    "B",
    # flake8-blind-except
    "BLE",
    # flake8-commas
    "COM",
    # flake8-comprehensions
    "C4",
    # flake8-datetimez
    "DTZ",
    # flake8-boolean-trap
    "FBT",
    # flake8-executable
    "EXE",
    # flake8-implicit-str-concat
    "ISC",
    # flake8-import-conventions
    "ICN",
    # flake8-logging-format
    "G",
    # flake8-no-pep420
    "INP",
    # flake8-debugger
    "T10",
    # flake8-bandit
    "S",
    # flake8-simplify
    "SIM",
    # flake8-print
    "T20",
    # flake8-pie
    "PIE",
    # flake8-pyi
    "PYI",
    # flake8-pytest-style
    "PT",
    # flake8-quotes
    "Q",
    # flake8-raise
    "RSE",
    # flake8-return
    "RET",
    # flake8-slots
    "SLOT",
    # flake8-simplify
    "SIM",
    # flake8-use-pathlib
    "PTH",
    # flake8-todos
    "TD",
    # flake8-fixme
    "FIX",
    # eradicate
    "ERA",
    # Pylint
    "PL",
    # tryceratops
    "TRY",
    # flynt
    "FLY",
    # refurb
    "FURB",
    # flake8-logging
    "LOG",
    # Ruff-specific rules
    "RUF",
    # pep8-naming
    "N",
    # isort
    "I",
]
ignore = [
    # Checks that function *args arguments have type annotations.
    "ANN002",
    # Checks that function **kwargs arguments have type annotations.
    "ANN003",
    # Checks that instance method self arguments have type annotations.
    "ANN101",
    # Checks that class method cls arguments have type annotations.
    "ANN102",
    # Checks that function arguments are annotated with a more specific type than Any.
    "ANN401",
]

[lint.flake8-bugbear]
# Allow default arguments like, e.g., `data: list[str] = fastapi.Query(None)`.
extend-immutable-calls = ["fastapi.Depends", "fastapi.Query", "fastapi.Path"]

[lint.flake8-builtins]
builtins-ignorelist = ["id"]

[lint.isort]
lines-after-imports = 2
lines-between-types = 1
known-first-party = [
    "app",
    "api",
    "bl",
    "cli",
    "client",
    "core",
    "repositories",
    "db",
    "entities",
    "filters",
    "models",
    "utils",
]

[lint.pylint]
max-args = 8


[format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
